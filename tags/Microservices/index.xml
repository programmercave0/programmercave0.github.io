<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservices on programmerCave</title>
    <link>https://programmercave.com/tags/Microservices/</link>
    <description>Recent content in Microservices on programmerCave</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://programmercave.com/tags/Microservices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Interview Question: What is an API Gateway?</title>
      <link>https://programmercave.com/Interview-Question-What-is-an-API-Gateway/</link>
      <pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>https://programmercave.com/Interview-Question-What-is-an-API-Gateway/</guid>
      <description>What is an API Gateway? An API Gateway is a server that acts as a single entry point for all client requests. It routes these requests to the appropriate backend services and handles responses back to the client. This centralized approach helps in managing and securing APIs efficiently, making it an essential component in modern software architecture.
Key Concepts of API Gateway  Routing: Directing incoming requests to the correct backend service.</description>
    </item>
    
    <item>
      <title>Interview Question: How Microservices Communicate?</title>
      <link>https://programmercave.com/Interview-Question-How-Microservices-Communicate/</link>
      <pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>https://programmercave.com/Interview-Question-How-Microservices-Communicate/</guid>
      <description>Introduction to Microservices Communication Microservices architecture involves breaking down a large application into smaller, independent services that communicate with each other to achieve overall functionality. The way these services communicate is crucial for the system&amp;rsquo;s performance, scalability, and resilience.
Communication Patterns Between Microservices There are two main types of communication between microservices:
 Synchronous Communication Asynchronous Communication  Letâ€™s explore both in detail.
Synchronous Communication In synchronous communication, one service sends a request to another service and waits for a response before proceeding.</description>
    </item>
    
  </channel>
</rss>
